---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FloatingWhatsAppButton from "../components/FloatingWhatsAppButton.astro";
import '../styles/global.css';
import { ViewTransitions } from "astro:transitions";

interface Props {
	title: string;
	showFooterMap?: boolean;
}

const { title, showFooterMap = true } = Astro.props;
---

<html lang="es">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body
		class="bg-[#f4e7d1] font-sans leading-normal tracking-normal flex flex-col min-h-screen"
	>
		<Header />

		<slot />

		<Footer showMap={showFooterMap} />
		<FloatingWhatsAppButton />

		<script is:inline>
			// Script robusto para menú móvil, funciona siempre incluso tras navegación SPA
			function toggleSidebar(show) {
				const mobileSidebar = document.getElementById("mobile-sidebar");
				const sidebarOverlay =
					document.getElementById("sidebar-overlay");
				const hamburgerIconWrapper = document.getElementById(
					"hamburger-icon-wrapper",
				);
				if (mobileSidebar) {
					if (show) {
						mobileSidebar.classList.remove("-translate-x-full");
						mobileSidebar.style.display = "block";
					} else {
						mobileSidebar.classList.add("-translate-x-full");
						mobileSidebar.style.display = "block";
					}
				}
				if (sidebarOverlay) {
					sidebarOverlay.style.display = show ? "block" : "none";
				}
				document.body.style.overflow = show ? "hidden" : "";
				if (hamburgerIconWrapper) {
					hamburgerIconWrapper.classList.toggle("open", show);
				}
			}

			function closeSidebar() {
				toggleSidebar(false);
			}
			function openSidebar() {
				toggleSidebar(true);
			}

			// Delegación de eventos para máxima robustez
			document.addEventListener("click", (e) => {
				const target = e.target;
				// Botón menú hamburguesa
				if (
					target &&
					target.closest &&
					target.closest("#menu-button")
				) {
					const mobileSidebar =
						document.getElementById("mobile-sidebar");
					const isOpen =
						mobileSidebar &&
						!mobileSidebar.classList.contains("-translate-x-full");
					toggleSidebar(!isOpen);
				}
				// Overlay o botón cerrar
				if (
					target &&
					(target.closest("#sidebar-overlay") ||
						target.closest("#close-sidebar-button"))
				) {
					closeSidebar();
				}
				// Clic en enlace del sidebar
				if (
					target &&
					target.closest &&
					target.closest("#mobile-sidebar") &&
					target.tagName === "A"
				) {
					closeSidebar();
				}
				// Toggle de servicios
				if (
					target &&
					target.closest &&
					target.closest("#services-toggle")
				) {
					const servicesMenu =
						document.getElementById("services-menu");
					const servicesChevron = target
						.closest("#services-toggle")
						.querySelector("svg");
					if (servicesMenu) servicesMenu.classList.toggle("hidden");
					if (servicesChevron)
						servicesChevron.classList.toggle("rotate-180");
				}
			});

			// Reaplica tras navegación SPA
			window.addEventListener("astro:after-swap", closeSidebar);
		</script>

		<script is:inline>
			function initAOS() {
				if (typeof window !== "undefined" && window.AOS) {
					window.AOS.init({
						duration: 900,
						once: true,
						easing: "ease-in-out",
					});
				}
			}

			// Inicializar cuando el DOM esté listo
			if (document.readyState === "loading") {
				document.addEventListener("DOMContentLoaded", initAOS);
			} else {
				initAOS();
			}

			// Inicializar después de navegación SPA
			document.addEventListener("astro:page-load", initAOS);
			if (typeof window !== "undefined") {
				window.addEventListener("astro:after-swap", initAOS);
			}
		</script>

		<!-- Carrusel JS inline -->
		<script is:inline>
			document.addEventListener("DOMContentLoaded", function () {
				// Get all carousels on the page
				var carousels = document.querySelectorAll('[id^="carousel-"]');
				carousels.forEach(function (carousel) {
					var id = carousel.id.replace("carousel-", "");
					var autoplay = carousel.dataset.autoplay === "true";
					var interval = parseInt(
						carousel.dataset.interval || "5000",
					);
					var imagesLength = parseInt(
						carousel.dataset.imagesLength || "0",
					);
					var carouselInner =
						carousel.querySelector(".carousel-inner");
					var prevButton = carousel.querySelector(
						"[data-carousel-prev]",
					);
					var nextButton = carousel.querySelector(
						"[data-carousel-next]",
					);
					var indicatorsContainer = carousel.querySelector(
						".carousel-indicators",
					);
					var currentIndex = 0;
					var autoSlideInterval;

					function updateCarousel() {
						if (carouselInner) {
							carouselInner.style.transform =
								"translateX(-" + currentIndex * 100 + "%)";
						}
						if (indicatorsContainer) {
							indicatorsContainer
								.querySelectorAll("button")
								.forEach(function (button, idx) {
									if (idx === currentIndex) {
										button.classList.add("opacity-100");
										button.classList.remove("opacity-50");
									} else {
										button.classList.add("opacity-50");
										button.classList.remove("opacity-100");
									}
								});
						}
					}

					function goToNext() {
						currentIndex = (currentIndex + 1) % imagesLength;
						updateCarousel();
					}

					function goToPrev() {
						currentIndex =
							(currentIndex - 1 + imagesLength) % imagesLength;
						updateCarousel();
					}

					function startAutoSlide() {
						if (autoplay) {
							clearInterval(autoSlideInterval);
							autoSlideInterval = window.setInterval(
								goToNext,
								interval,
							);
						}
					}

					function stopAutoSlide() {
						clearInterval(autoSlideInterval);
					}

					if (prevButton) {
						prevButton.addEventListener("click", function () {
							stopAutoSlide();
							goToPrev();
							startAutoSlide();
						});
					}

					if (nextButton) {
						nextButton.addEventListener("click", function () {
							stopAutoSlide();
							goToNext();
							startAutoSlide();
						});
					}

					if (indicatorsContainer) {
						indicatorsContainer.addEventListener(
							"click",
							function (e) {
								var target = e.target;
								if (
									target.matches("[data-carousel-indicator]")
								) {
									stopAutoSlide();
									currentIndex = parseInt(
										target.dataset.carouselIndicator || "0",
									);
									updateCarousel();
									startAutoSlide();
								}
							},
						);
					}

					// Initialize carousel
					updateCarousel();
					startAutoSlide();

					// Pause on hover
					carousel.addEventListener("mouseenter", stopAutoSlide);
					carousel.addEventListener("mouseleave", startAutoSlide);
				});
			});
		</script>
	</body>
</html>
