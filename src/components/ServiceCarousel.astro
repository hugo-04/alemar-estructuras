---
import { Icon } from 'astro-icon/components';


interface Props {
  images: { src: string; alt: string }[];
  id?: string;
  autoplay?: boolean;
  interval?: number;
  showNavigation?: boolean;
  showPagination?: boolean;
}

// Obtener id de Astro.props antes de usarlo
const { images, id, autoplay = true, interval = 3000, showNavigation = true, showPagination = false } = Astro.props;
const uniqueId = id ?? `carousel-${Math.random().toString(36).slice(2, 10)}`;
---

<div
  id={uniqueId}
  class="service-carousel-container relative flex flex-col items-center border border-slate-200/50 backdrop-blur-sm rounded-3xl shadow-2xl max-w-full sm:max-w-lg md:max-w-2xl w-full mx-auto group p-0 bg-gradient-to-br from-slate-50 via-white to-blue-50"
  data-autoplay={autoplay}
  data-interval={interval}
  data-images-length={images.length}
>
  {images.length === 0 ? (
    <div class="w-full h-full flex items-center justify-center bg-red-100 text-red-700 font-bold min-h-[180px] sm:min-h-[220px] md:min-h-[340px] rounded-3xl text-base sm:text-lg">
      No hay imágenes para este servicio
    </div>
  ) : (
    <div class="carousel-viewport w-full overflow-hidden rounded-3xl bg-gradient-to-br from-slate-100 via-white to-blue-100 flex items-center justify-center aspect-[16/9] min-h-[180px] sm:min-h-[220px] md:min-h-[340px] max-h-[320px] sm:max-h-[420px] md:max-h-[600px]" style="border: 2px solid #e0e7ef; box-shadow: 0 8px 32px 0 rgba(31,38,135,0.10);">
      <div class="carousel-inner flex w-full h-full transition-transform duration-700 ease-in-out">
        {/* Clon de la última imagen al inicio para transición suave */}
        {images.length > 0 && (
          <div class="carousel-item w-full flex-shrink-0" data-index="clone-last">
            <img src={images[images.length - 1].src} alt={images[images.length - 1].alt} class="w-full h-[180px] sm:h-[220px] md:h-[500px] object-cover" />
          </div>
        )}
        {/* Imágenes originales */}
      {images.map((image, index) => (
          <div class="carousel-item w-full flex-shrink-0" data-index={index}>
            <img src={image.src} alt={image.alt || 'Imagen de servicio'} class="w-full h-[180px] sm:h-[220px] md:h-[500px] object-cover" />
        </div>
      ))}
        {/* Clon de la primera imagen al final para transición suave */}
        {images.length > 0 && (
          <div class="carousel-item w-full flex-shrink-0" data-index="clone-first">
            <img src={images[0].src} alt={images[0].alt} class="w-full h-[180px] sm:h-[220px] md:h-[500px] object-cover" />
          </div>
        )}
    </div>
    {/* Flechas solo visibles al hover en desktop */}
    {showNavigation && (
      <>
        <button
            class="carousel-control-prev opacity-100 md:opacity-0 group-hover:opacity-100 transition-all duration-300 absolute left-1 sm:left-2 top-1/2 -translate-y-1/2 bg-white/90 text-blue-600 border border-slate-200 shadow-lg hover:bg-blue-100 hover:text-blue-800 hover:scale-110 rounded-full p-1.5 sm:p-2 w-8 sm:w-10 h-8 sm:h-10 flex items-center justify-center z-20 focus:outline-none focus:ring-2 focus:ring-blue-400/50 js-carousel-arrow"
          data-carousel-prev
          aria-label="Anterior"
        >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-5 w-5 sm:h-6 sm:w-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" /></svg>
        </button>
        <button
            class="carousel-control-next opacity-100 md:opacity-0 group-hover:opacity-100 transition-all duration-300 absolute right-1 sm:right-2 top-1/2 -translate-y-1/2 bg-white/90 text-blue-600 border border-slate-200 shadow-lg hover:bg-blue-100 hover:text-blue-800 hover:scale-110 rounded-full p-1.5 sm:p-2 w-8 sm:w-10 h-8 sm:h-10 flex items-center justify-center z-20 focus:outline-none focus:ring-2 focus:ring-blue-400/50 js-carousel-arrow"
          data-carousel-next
          aria-label="Siguiente"
        >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-5 w-5 sm:h-6 sm:w-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
        </button>
      </>
    )}
  </div>
  )}
  {/* Miniaturas mejoradas y funcionales */}
  <div class="flex justify-center overflow-x-auto scrollbar-hide w-full px-2 sm:px-4 mt-2 sm:mt-4">
    <div class="flex space-x-2 sm:space-x-3 md:space-x-4 max-w-full justify-center">
      {images.map((image, index) => (
        <button
          class="thumbnail-btn relative border-2 border-transparent rounded-xl overflow-hidden focus:outline-none flex-shrink-0 transition-all duration-300 bg-white shadow-lg hover:shadow-xl hover:scale-110 group/thumb"
          data-carousel-thumbnail={index}
        >
          <img 
            src={image.src} 
            alt={image.alt} 
            class="w-10 h-10 sm:w-12 sm:h-12 md:w-14 md:h-14 object-cover transition-transform duration-300 group-hover/thumb:scale-110 bg-white rounded-xl" 
            style="aspect-ratio: 16/9;"
          />
        </button>
      ))}
    </div>
  </div>
  <div class="text-center mt-2">
    <div class="inline-flex items-center bg-white/80 backdrop-blur-sm px-3 sm:px-4 py-1.5 sm:py-2 rounded-full shadow-lg border border-slate-200/50">
      <span class="text-xs sm:text-sm md:text-base text-slate-700 font-semibold">
        <span class="carousel-counter-current text-blue-600">1</span> 
        <span class="text-slate-500 mx-1">de</span> 
        <span class="carousel-counter-total">{images.length}</span>
      </span>
    </div>
  </div>
</div>

<style>
  .thumbnail-btn.active {
    border-color: #2563eb;
    box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.2);
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
</style>

 