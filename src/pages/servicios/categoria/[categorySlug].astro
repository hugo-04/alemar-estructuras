---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import ServicePreviewCard from '../../../components/cards/ServicePreviewCard.astro';
import { services } from '../../../data/services.ts';


export async function getStaticPaths() {
  const categories = [...new Set(services.map(service => service.category))];
  return categories.map(category => {
    const categorySlug = category.toLowerCase().replace(/ /g, '-');
    console.log(`Generating path for category: ${category}, slug: ${categorySlug}`);
    return {
      params: { categorySlug: categorySlug },
      props: { categoryName: category },
    };
  });
}

interface Props {
  categoryName: string;
}

const { categoryName } = Astro.props as Props;
const categorySlug = categoryName.toLowerCase().replace(/ /g, '-');

console.log(`Current categoryName: ${categoryName}, categorySlug: ${categorySlug}`);

const filteredServices = services.filter(service => {
  const serviceCategorySlug = service.category.toLowerCase().replace(/ /g, '-');
  console.log(`Comparing service category slug: ${serviceCategorySlug} with current category slug: ${categorySlug}`);
  return serviceCategorySlug === categorySlug;
});

console.log(`Filtered services count: ${filteredServices.length}`);

const initialVisibleServices = 3;
---

<BaseLayout title={`${categoryName} - Nuestros Servicios - [Nombre de tu Empresa]`}>
  <!-- Sección Hero de Categoría -->
  <section class="relative bg-cover bg-center h-48 flex items-center justify-center text-white shadow-lg"
    style={`background-image: url('https://via.placeholder.com/1920x400/334155/FFFFFF?text=${encodeURIComponent(categoryName)}');`}>
    <div class="absolute inset-0 bg-gray-900 opacity-70"></div>
    <div class="relative z-10 text-center p-4">
      <h1 class="text-5xl font-extrabold mb-4">{categoryName}</h1>
      <p class="text-xl max-w-2xl mx-auto">Explora todos nuestros servicios en la categoría de {categoryName}.</p>
    </div>
  </section>

  <main class="container mx-auto p-6 mt-8 flex-grow">
    <div id="services-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" data-initial-visible-services={initialVisibleServices}>
      {
        filteredServices.map((service, index) => (
          <div class:list={["service-item", { "hidden": index >= initialVisibleServices }]}>
            <ServicePreviewCard service={service} />
          </div>
        ))
      }
    </div>

    {filteredServices.length > initialVisibleServices && (
      <div class="text-center mt-12">
        <button id="toggle-services-button" class="bg-gray-800 text-white px-8 py-3 rounded-md hover:bg-gray-900 transition-colors duration-300 font-semibold">
          Ver Más
        </button>
      </div>
    )}

    <!-- Sección de Llamada a la Acción (CTA) -->
    <section class="bg-gray-800 text-white text-center p-12 rounded-lg shadow-lg mt-16">
      <h2 class="text-4xl font-extrabold mb-4">¿No encuentras lo que buscas?</h2>
      <p class="text-xl mb-8">Contáctanos para una solución personalizada.</p>
      <a href="/contacto" class="inline-block bg-blue-800 text-white px-10 py-5 rounded-md text-xl font-semibold hover:bg-blue-900 transition duration-300">
        Contactar Ahora
      </a>
    </section>
  </main>

  <script is:inline src="/scripts/category.js"></script>
</BaseLayout>